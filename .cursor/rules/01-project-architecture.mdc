---
alwaysApply: true
description: Project architecture and structure guidelines for Agent Chat UI
---

# Project Architecture & Structure

## Project Overview
This is an **Agent Chat UI** built with Next.js 15 and React 19, designed specifically for interacting with LangGraph servers. The project uses the App Router pattern and implements a modern chat interface with streaming capabilities.

## Core Architecture

### Technology Stack
- **Frontend**: Next.js 15.2.3 (App Router), React 19.0.0, TypeScript 5.7.2
- **Styling**: Tailwind CSS 4.0.13, shadcn/ui components (New York style)
- **State Management**: React Context API with custom streaming hooks
- **Build Tools**: pnpm, ESBuild, PostCSS
- **Animation**: Framer Motion 12.4.9
- **Icons**: Lucide React

### Project Structure
```
src/
├── app/                    # Next.js App Router
│   ├── api/[..._path]/    # LangGraph API proxy (private deployment)
│   ├── globals.css        # Global styles and design system
│   ├── layout.tsx         # Root layout with providers
│   └── page.tsx           # Main chat interface
├── components/            # React components
│   ├── ui/               # shadcn/ui base components
│   ├── thread/           # Chat-specific components
│   ├── settings/         # Configuration components
│   └── icons/            # Custom icon components
├── providers/            # React Context providers
│   ├── Stream.tsx        # LangGraph streaming management
│   └── Thread.tsx        # Thread/conversation management
├── hooks/               # Custom React hooks
├── lib/                # Utilities and configurations
└── types/              # TypeScript type definitions
```

## Key Components

### Entry Points
- Main interface: [src/app/page.tsx](mdc:src/app/page.tsx)
- Root layout: [src/app/layout.tsx](mdc:src/app/layout.tsx)
- API proxy: [src/app/api/[..._path]/route.ts](mdc:src/app/api/[..._path]/route.ts)

### Core Providers
- Stream management: [src/providers/Stream.tsx](mdc:src/providers/Stream.tsx)
- Thread management: [src/providers/Thread.tsx](mdc:src/providers/Thread.tsx)

### Main Components
- Chat interface: [src/components/thread/index.tsx](mdc:src/components/thread/index.tsx)
- Message components: [src/components/thread/messages/](mdc:src/components/thread/messages/)
- UI components: [src/components/ui/](mdc:src/components/ui/)

## Configuration Files
- TypeScript: [tsconfig.json](mdc:tsconfig.json)
- Package management: [package.json](mdc:package.json)
- Tailwind: [tailwind.config.js](mdc:tailwind.config.js)
- shadcn/ui: [components.json](mdc:components.json)

## Development Environment
Remember to activate the 'uv' virtual environment before running commands in this project.

## Private Deployment Setup
This project is configured for private deployment using an internal API proxy. The API URL is automatically routed through `/api/*` endpoints for security, hiding the real LangGraph server URL from clients.